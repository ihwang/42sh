Arithmetic expansion

The format for arithmetic expansion is:
$(( expression ))

For 42sh, the following operators should be handled (in order or precedence):
-	Postfix incrementality, decrementality ++ --
- 	Prefix incrementality, decrementality ++ --
	Unary + - (not explicitly asked for in subject)
- 	Multiplication, division, modulo * / %
- 	Addition, subtraction + -
-	Comparison <= >= < >
- 	Equality, non-equality == !=
- 	AND/OR && ||

The following operands are handled:
- 	integers
- 	octal
-	hexadecimal
- 	base
	--	the format for base numbers is: 
		base#number
	-- 	base ranges between 2 and 64, and the digits of the number goes in the following order:
		0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ@_
-	internal variables
	-- 	if an non-existent internal variable is used in an arithmetic expression, it will assign a value of 0 to it, and add it to the internal variables.
	--	when an internval variable is incremented or decremented, the value of the internal variable is modified.
	--	WARNING: increment/decrement internval variables with caution! E.g. $((++PATH)) will replace the value for PATH with 1.

Without the possibility of shell scripting, the use for arithmetic expansion is limited.
One way to use it is with the echo command, e.g.:
echo $((2+2))

Arithmetic expansions can be nested, i.e. you can have arithmetic expansions within arithmetic expansions, e.g.:
$((2+$((8*9))))

When testing, compare the results with bash. Take note of the arithmetic expressions that give a different result/error messageor give a segmentation fault.
